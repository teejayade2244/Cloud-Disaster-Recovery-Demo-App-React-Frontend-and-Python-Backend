name: Backend CI/CD Pipeline
on:
  push:
    branches:
      - master
    paths:
      - 'Backend-app/**'
      - '.github/workflows/backend-ci-cd.yml'
  pull_request:
    branches:
      - "*"
    paths:
      - 'Backend-app/**'
      - '.github/workflows/backend-ci-cd.yml'

# Permissions required for OIDC authentication and checking out/pushing code
permissions:
  id-token: write
  contents: write 

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Backend-app repository code
        uses: actions/checkout@v4

      - name: Checkout Kubernetes Manifests repository
        uses: actions/checkout@v4
        with:
          repository: teejayade2244/AWS-Cloud-Disaster-Recovery-Manifest-Repo 
          ref: master #
          token: ${{ secrets.REPO_PAT }} 
          path: AWS-Cloud-Disaster-Recovery-Manifest-Repo

      # --- Configure AWS Credentials using OIDC (for eu-west-2 by default) ---
      - name: Configure AWS Credentials (eu-west-2)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2 

      # --- Install Python dependencies for scanning (for fs scan if needed) ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Backend Python Dependencies
        working-directory: ./Backend-app
        run: |
          ls -la
          pip install -r requirements.txt

      # --- Scan Dependencies for Vulnerabilities (using Trivy FS Scan) ---
      - name: Run Trivy FS Scan for Dependencies
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          input: './Backend-app'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: 1

      # --- Docker Build (happens only once) ---
      - name: Build Backend Docker Image
        working-directory: ./Backend-app
        env:
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_NAME }} # For local image tag
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG .

      # --- Login and Push to Primary ECR (eu-west-2) ---
      - name: Login to Amazon ECR (eu-west-2)
        id: login-ecr-primary
        uses: aws-actions/amazon-ecr-login@v2
        with:
          aws-region: eu-west-2

      - name: Push Backend Docker Image to Primary ECR (eu-west-2)
        working-directory: ./Backend-app
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-primary.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY_NAME }} # Primary ECR repo name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag ${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Get Primary ECR Image URI
        id: ecr_image_uri_primary
        run: |
          ECR_URI="${{ steps.login-ecr-primary.outputs.registry }}/${{ vars.ECR_REPOSITORY_NAME }}:${{ github.sha }}"
          echo "ECR_IMAGE_URI_PRIMARY=$ECR_URI" >> $GITHUB_OUTPUT

      # --- Login and Push to DR ECR (us-east-1) ---
      - name: Configure AWS Credentials (us-east-1) for DR ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE_ARN }} # Same role, but for the DR region ECR
          aws-region: us-east-1

      - name: Login to Amazon ECR (us-east-1)
        id: login-ecr-dr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          aws-region: us-east-1

      - name: Push Backend Docker Image to DR ECR (us-east-1)
        working-directory: ./Backend-app
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-dr.outputs.registry }}
          ECR_REPOSITORY: ${{ vars.DR_ECR_REPOSITORY_NAME }} # DR ECR repo name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker tag ${{ vars.ECR_REPOSITORY_NAME }}:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Get DR ECR Image URI
        id: ecr_image_uri_dr
        run: |
          ECR_URI="${{ steps.login-ecr-dr.outputs.registry }}/${{ vars.DR_ECR_REPOSITORY_NAME }}:${{ github.sha }}"
          echo "ECR_IMAGE_URI_DR=$ECR_URI" >> $GITHUB_OUTPUT

      # ----------------------------------------------------------------------
      # --- CD START: Deploy to Primary EKS Cluster (eu-west-2) ---
      # ----------------------------------------------------------------------

      - name: Configure AWS Credentials (eu-west-2) for Primary EKS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Update Primary Manifest and Commit
        id: update_primary_manifest
        run: |
          MANIFEST_FILE="AWS-Cloud-Disaster-Recovery-Manifest-Repo/kubernetes/backend-eu-west-2.yaml"
          NEW_IMAGE_URI="${{ steps.ecr_image_uri_primary.outputs.ECR_IMAGE_URI_PRIMARY }}"
          
          # Replace the image in the PRIMARY manifest
          sed -i "/image:/c\        image: ${NEW_IMAGE_URI}" "$MANIFEST_FILE"
          
          # Check if the file was modified and prepare for commit
          cd AWS-Cloud-Disaster-Recovery-Manifest-Repo
          if git diff --exit-code kubernetes/backend-eu-west-2.yaml; then
            echo "::set-output name=file_modified::false"
          else
            echo "::set-output name=file_modified::true"
          fi
          # Go back to the root of the runner's workspace
          cd -

      - name: Commit and Push Primary Manifest Changes
        if: steps.update_primary_manifest.outputs.file_modified == 'true'
        run: |
          cd AWS-Cloud-Disaster-Recovery-Manifest-Repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kubernetes/backend-eu-west-2.yaml
          git commit -m "chore: Update primary backend image to ${{ github.sha }} [skip ci]"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}

      - name: Deploy to Primary EKS Cluster
        run: kubectl apply -f AWS-Cloud-Disaster-Recovery-Manifest-Repo/kubernetes/backend-eu-west-2.yaml

      # ----------------------------------------------------------------------
      # --- CD START: Deploy to DR EKS Cluster (us-east-1) ---
      # ----------------------------------------------------------------------

      - name: Configure AWS Credentials (us-east-1) for DR EKS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTIONS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Update DR Manifest and Commit
        id: update_dr_manifest
        run: |
          MANIFEST_FILE="AWS-Cloud-Disaster-Recovery-Manifest-Repo/kubernetes/backend-us-east-1.yaml"
          NEW_IMAGE_URI="${{ steps.ecr_image_uri_dr.outputs.ECR_IMAGE_URI_DR }}"

          # Replace the image in the DR manifest
          sed -i "/image:/c\        image: ${NEW_IMAGE_URI}" "$MANIFEST_FILE"

          # Check if the file was modified and prepare for commit
          cd AWS-Cloud-Disaster-Recovery-Manifest-Repo
          if git diff --exit-code kubernetes/backend-us-east-1.yaml; then
            echo "::set-output name=file_modified::false"
          else
            echo "::set-output name=file_modified::true"
          fi
          # Go back to the root of the runner's workspace
          cd -

      - name: Commit and Push DR Manifest Changes
        if: steps.update_dr_manifest.outputs.file_modified == 'true'
        run: |
          cd AWS-Cloud-Disaster-Recovery-Manifest-Repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add kubernetes/backend-us-east-1.yaml
          git commit -m "chore: Update DR backend image to ${{ github.sha }} [skip ci]"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_PAT }}

      - name: Deploy to DR EKS Cluster
        run: kubectl apply -f AWS-Cloud-Disaster-Recovery-Manifest-Repo/kubernetes/backend-us-east-1.yaml
